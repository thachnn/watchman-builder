diff --git a/CMake/FollyCompilerUnix.cmake b/CMake/FollyCompilerUnix.cmake
index 8dcaf141a..ecb252a95 100644
--- a/CMake/FollyCompilerUnix.cmake
+++ b/CMake/FollyCompilerUnix.cmake
@@ -28,7 +28,7 @@ set(
 )
 mark_as_advanced(CXX_STD)
 
-set(CMAKE_CXX_FLAGS_COMMON "-g -Wall -Wextra")
+set(CMAKE_CXX_FLAGS_COMMON "-Wall -Wextra")
 set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${CMAKE_CXX_FLAGS_COMMON}")
 set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${CMAKE_CXX_FLAGS_COMMON} -O3")
 
@@ -43,7 +43,6 @@ function(apply_folly_compile_options_to_target THETARGET)
   )
   target_compile_options(${THETARGET}
     PRIVATE
-      -g
       -std=${CXX_STD}
       -finput-charset=UTF-8
       -fsigned-char
diff --git a/CMake/folly-deps.cmake b/CMake/folly-deps.cmake
index a0479e6db..f404f83eb 100644
--- a/CMake/folly-deps.cmake
+++ b/CMake/folly-deps.cmake
@@ -70,6 +70,9 @@ find_package(LibEvent MODULE REQUIRED)
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBEVENT_LIB})
 list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBEVENT_INCLUDE_DIR})
 
+set(FOLLY_ORIGINAL_CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS}")
+string(REGEX REPLACE " -std=[^ ]*" "" CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS}")
+
 find_package(ZLIB MODULE)
 set(FOLLY_HAVE_LIBZ ${ZLIB_FOUND})
 if (ZLIB_FOUND)
@@ -104,6 +107,8 @@ if (LIBLZMA_FOUND)
   list(APPEND FOLLY_LINK_LIBRARIES ${LIBLZMA_LIBRARIES})
 endif()
 
+set(CMAKE_REQUIRED_FLAGS "${FOLLY_ORIGINAL_CMAKE_REQUIRED_FLAGS}")
+
 find_package(LZ4 MODULE)
 set(FOLLY_HAVE_LIBLZ4 ${LZ4_FOUND})
 if (LZ4_FOUND)
diff --git a/CMake/libfolly.pc.in b/CMake/libfolly.pc.in
index ffa043c1f..039a10242 100644
--- a/CMake/libfolly.pc.in
+++ b/CMake/libfolly.pc.in
@@ -1,5 +1,5 @@
 prefix=@CMAKE_INSTALL_PREFIX@
-exec_prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
 libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
 includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
 
diff --git a/folly/test/MapUtilTest.cpp b/folly/test/MapUtilTest.cpp
index cd44ea823..0d71f8cf8 100644
--- a/folly/test/MapUtilTest.cpp
+++ b/folly/test/MapUtilTest.cpp
@@ -18,7 +18,9 @@
 
 #include <cstddef>
 #include <map>
+#if __cplusplus >= 201703L && __has_include(<optional>)
 #include <optional>
+#endif
 #include <unordered_map>
 
 #include <folly/Traits.h>
@@ -99,6 +101,7 @@ TEST(MapUtil, get_optional_path_mixed) {
   EXPECT_TRUE(get_optional(m, "a"));
 }
 
+#if __cplusplus >= 201703L && __has_include(<optional>)
 TEST(MapUtil, get_optional_std) {
   std::map<int, int> m;
   m[1] = 2;
@@ -106,6 +109,7 @@ TEST(MapUtil, get_optional_std) {
   EXPECT_EQ(2, get_optional<std::optional>(m, 1).value());
   EXPECT_FALSE(get_optional<std::optional>(m, 2).has_value());
 }
+#endif
 
 TEST(MapUtil, get_ref_default) {
   std::map<int, int> m;
